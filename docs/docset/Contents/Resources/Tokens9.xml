<?xml version="1.0" encoding="UTF-8"?>
<Tokens version="1.0">
	<File path="Protocols/UHNBLEControllerDelegate.html">
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intf/UHNBLEControllerDelegate</TokenIdentifier>
			<Abstract type="html">The UHNBLEControllerDelegate protocol defines the methods that a delegate of a UHNBLEController object must adopt. The optional methods of the protocol allow the delegate to monitor the discovery and connectivity of peripheral devices. The required methods of the protocol indicates discovery, connectivity, and read/write request with the peripheral device.</Abstract>
			<DeclaredIn>UHNBLEController.h</DeclaredIn>
            
			
			<NodeRef refid="9"/>
		</Token>
		
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/UHNBLEControllerDelegate/bleController:didDiscoverPeripheral:services:RSSI:</TokenIdentifier>
			<Abstract type="html">Notifies the delegate when a peripheral has been discovered</Abstract>
			<DeclaredIn>UHNBLEController.h</DeclaredIn>
			
			<Declaration>- (void)bleController:(UHNBLEController *)controller didDiscoverPeripheral:(NSString *)deviceName services:(NSArray *)serviceUUIDs RSSI:(NSNumber *)RSSI</Declaration>
			<Parameters>
				<Parameter>
					<Name>controller</Name>
					<Abstract type="html">The UHNBLEController that discovered the peripheral</Abstract>
				</Parameter><Parameter>
					<Name>deviceName</Name>
					<Abstract type="html">The device name of the peripheral</Abstract>
				</Parameter><Parameter>
					<Name>serviceUUIDs</Name>
					<Abstract type="html">An array of NSString representing the UUID of the services available for the peripheral. This array includes all the provided required services and potentially additional services.</Abstract>
				</Parameter><Parameter>
					<Name>RSSI</Name>
					<Abstract type="html">The rssi power of the peripheral</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/bleController:didDiscoverPeripheral:services:RSSI:</Anchor>
            <NodeRef refid="9"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/UHNBLEControllerDelegate/bleController:didDisconnectFromPeripheral:</TokenIdentifier>
			<Abstract type="html">Notifies the delegate when a peripheral was disconnected</Abstract>
			<DeclaredIn>UHNBLEController.h</DeclaredIn>
			
			<Declaration>- (void)bleController:(UHNBLEController *)controller didDisconnectFromPeripheral:(NSString *)deviceName</Declaration>
			<Parameters>
				<Parameter>
					<Name>controller</Name>
					<Abstract type="html">The UHNBLEController that was managing the peripheral</Abstract>
				</Parameter><Parameter>
					<Name>deviceName</Name>
					<Abstract type="html">The device name of the peripheral</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/bleController:didDisconnectFromPeripheral:</Anchor>
            <NodeRef refid="9"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/UHNBLEControllerDelegate/bleController:failedToConnectWithPeripheral:</TokenIdentifier>
			<Abstract type="html">Notifies the delegate when a peripheral failed to connect</Abstract>
			<DeclaredIn>UHNBLEController.h</DeclaredIn>
			
			<Declaration>- (void)bleController:(UHNBLEController *)controller failedToConnectWithPeripheral:(NSString *)deviceName</Declaration>
			<Parameters>
				<Parameter>
					<Name>controller</Name>
					<Abstract type="html">The UHNBLEController that discovered the peripheral</Abstract>
				</Parameter><Parameter>
					<Name>deviceName</Name>
					<Abstract type="html">The device name of the peripheral</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/bleController:failedToConnectWithPeripheral:</Anchor>
            <NodeRef refid="9"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/UHNBLEControllerDelegate/bleController:didUpdateNotificationState:forCharacteristic:</TokenIdentifier>
			<Abstract type="html">Notifies the delegate when the peripheral did update a characteristic notification state</Abstract>
			<DeclaredIn>UHNBLEController.h</DeclaredIn>
			
			<Declaration>- (void)bleController:(UHNBLEController *)controller didUpdateNotificationState:(BOOL)notify forCharacteristic:(NSString *)characteristicUUID</Declaration>
			<Parameters>
				<Parameter>
					<Name>controller</Name>
					<Abstract type="html">The UHNBLEController that is managing the peripheral</Abstract>
				</Parameter><Parameter>
					<Name>notify</Name>
					<Abstract type="html">The current state of the characteristic notification/indication</Abstract>
				</Parameter><Parameter>
					<Name>characteristicUUID</Name>
					<Abstract type="html">A NSString representing the UUID of the characteristic</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/bleController:didUpdateNotificationState:forCharacteristic:</Anchor>
            <NodeRef refid="9"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/UHNBLEControllerDelegate/bleController:didWriteValue:toCharacteristic:</TokenIdentifier>
			<Abstract type="html">Notifies the delegate when the peripheral did complete a successful write to a characteristic</Abstract>
			<DeclaredIn>UHNBLEController.h</DeclaredIn>
			
			<Declaration>- (void)bleController:(UHNBLEController *)controller didWriteValue:(NSData *)value toCharacteristic:(NSString *)characteristicUUID</Declaration>
			<Parameters>
				<Parameter>
					<Name>controller</Name>
					<Abstract type="html">The UHNBLEController that is managing the peripheral</Abstract>
				</Parameter><Parameter>
					<Name>value</Name>
					<Abstract type="html">The value that was written to the characteristic</Abstract>
				</Parameter><Parameter>
					<Name>characteristicUUID</Name>
					<Abstract type="html">A NSString representing the UUID of the characteristic</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/bleController:didWriteValue:toCharacteristic:</Anchor>
            <NodeRef refid="9"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/UHNBLEControllerDelegate/bleController:didUpdateValue:forCharacteristic:</TokenIdentifier>
			<Abstract type="html">Notifies the delegate when the peripheral did update the value of a characteristic (either read or notified/indicated)</Abstract>
			<DeclaredIn>UHNBLEController.h</DeclaredIn>
			
			<Declaration>- (void)bleController:(UHNBLEController *)controller didUpdateValue:(NSData *)value forCharacteristic:(NSString *)characteristicUUID</Declaration>
			<Parameters>
				<Parameter>
					<Name>controller</Name>
					<Abstract type="html">The UHNBLEController that is managing the peripheral</Abstract>
				</Parameter><Parameter>
					<Name>value</Name>
					<Abstract type="html">The value that was written to the characteristic</Abstract>
				</Parameter><Parameter>
					<Name>characteristicUUID</Name>
					<Abstract type="html">A NSString representing the UUID of the characteristic</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/bleController:didUpdateValue:forCharacteristic:</Anchor>
            <NodeRef refid="9"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/UHNBLEControllerDelegate/bleController:didConnectWithPeripheral:withUUID:</TokenIdentifier>
			<Abstract type="html">Notifies the delegate when a peripheral did connect</Abstract>
			<DeclaredIn>UHNBLEController.h</DeclaredIn>
			
			<Declaration>- (void)bleController:(UHNBLEController *)controller didConnectWithPeripheral:(NSString *)deviceName withUUID:(NSUUID *)uuid</Declaration>
			<Parameters>
				<Parameter>
					<Name>controller</Name>
					<Abstract type="html">The UHNBLEController that is managing the peripheral</Abstract>
				</Parameter><Parameter>
					<Name>deviceName</Name>
					<Abstract type="html">The device name of the peripheral</Abstract>
				</Parameter><Parameter>
					<Name>uuid</Name>
					<Abstract type="html">A NSUUID with the uuid of the peripheral</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/bleController:didConnectWithPeripheral:withUUID:</Anchor>
            <NodeRef refid="9"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/UHNBLEControllerDelegate/bleController:didConnectWithPeripheral:withServices:andUUID:</TokenIdentifier>
			<Abstract type="html">Notifies the delegate when a peripheral did connect</Abstract>
			<DeclaredIn>UHNBLEController.h</DeclaredIn>
			
			<Declaration>- (void)bleController:(UHNBLEController *)controller didConnectWithPeripheral:(NSString *)deviceName withServices:(NSArray *)serviceUUIDs andUUID:(NSUUID *)uuid</Declaration>
			<Parameters>
				<Parameter>
					<Name>controller</Name>
					<Abstract type="html">The UHNBLEController that is managing the peripheral</Abstract>
				</Parameter><Parameter>
					<Name>deviceName</Name>
					<Abstract type="html">The device name of the peripheral</Abstract>
				</Parameter><Parameter>
					<Name>serviceUUIDs</Name>
					<Abstract type="html">An array of NSString representing the UUID of the services available for the peripheral. This array includes all the provided required services and potentially additional services.</Abstract>
				</Parameter><Parameter>
					<Name>uuid</Name>
					<Abstract type="html">A NSUUID with the uuid of the peripheral</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/bleController:didConnectWithPeripheral:withServices:andUUID:</Anchor>
            <NodeRef refid="9"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/UHNBLEControllerDelegate/bleController:didDiscoverServices:</TokenIdentifier>
			<Abstract type="html">Notifies the delegate when services were discovered for the peripheral</Abstract>
			<DeclaredIn>UHNBLEController.h</DeclaredIn>
			
			<Declaration>- (void)bleController:(UHNBLEController *)controller didDiscoverServices:(NSArray *)serviceUUIDs</Declaration>
			<Parameters>
				<Parameter>
					<Name>controller</Name>
					<Abstract type="html">The UHNBLEController that is managing the peripheral</Abstract>
				</Parameter><Parameter>
					<Name>serviceUUIDs</Name>
					<Abstract type="html">An array of NSString representing the UUID of the services available for the peripheral.</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/bleController:didDiscoverServices:</Anchor>
            <NodeRef refid="9"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/UHNBLEControllerDelegate/bleController:didDiscoverCharacteristics:forService:</TokenIdentifier>
			<Abstract type="html">Notifies the delegate when characteristics were discovered for the peripheral</Abstract>
			<DeclaredIn>UHNBLEController.h</DeclaredIn>
			
			<Declaration>- (void)bleController:(UHNBLEController *)controller didDiscoverCharacteristics:(NSArray *)characteristicUUIDs forService:(NSString *)serviceUUID</Declaration>
			<Parameters>
				<Parameter>
					<Name>controller</Name>
					<Abstract type="html">The UHNBLEController that is managing the peripheral</Abstract>
				</Parameter><Parameter>
					<Name>characteristicUUIDs</Name>
					<Abstract type="html">An array of NSString representing the characteristic UUIDs</Abstract>
				</Parameter><Parameter>
					<Name>serviceUUID</Name>
					<Abstract type="html">A NSString representing the UUID of the service</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/bleController:didDiscoverCharacteristics:forService:</Anchor>
            <NodeRef refid="9"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/UHNBLEControllerDelegate/bleController:serviceNotAvailable:</TokenIdentifier>
			<Abstract type="html">Notifies the delegate when the requested service is not available for the peripheral</Abstract>
			<DeclaredIn>UHNBLEController.h</DeclaredIn>
			
			<Declaration>- (void)bleController:(UHNBLEController *)controller serviceNotAvailable:(NSString *)serviceUUID</Declaration>
			<Parameters>
				<Parameter>
					<Name>controller</Name>
					<Abstract type="html">The UHNBLEController that is managing the peripheral</Abstract>
				</Parameter><Parameter>
					<Name>serviceUUID</Name>
					<Abstract type="html">A NSString representing the UUID of the service</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/bleController:serviceNotAvailable:</Anchor>
            <NodeRef refid="9"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/UHNBLEControllerDelegate/bleController:characteristicNotAvailable:</TokenIdentifier>
			<Abstract type="html">Notifies the delegate when the requested characteristic is not available for the peripheral</Abstract>
			<DeclaredIn>UHNBLEController.h</DeclaredIn>
			
			<Declaration>- (void)bleController:(UHNBLEController *)controller characteristicNotAvailable:(NSString *)characteristicUUID</Declaration>
			<Parameters>
				<Parameter>
					<Name>controller</Name>
					<Abstract type="html">The UHNBLEController that is managing the peripheral</Abstract>
				</Parameter><Parameter>
					<Name>characteristicUUID</Name>
					<Abstract type="html">A NSString representing the UUID of the characteristic</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/bleController:characteristicNotAvailable:</Anchor>
            <NodeRef refid="9"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/UHNBLEControllerDelegate/bleController:failedWriteToCharacteristic:</TokenIdentifier>
			<Abstract type="html">Notifies the delegate when a write to characteristic request failed</Abstract>
			<DeclaredIn>UHNBLEController.h</DeclaredIn>
			
			<Declaration>- (void)bleController:(UHNBLEController *)controller failedWriteToCharacteristic:(NSString *)characteristicUUID</Declaration>
			<Parameters>
				<Parameter>
					<Name>controller</Name>
					<Abstract type="html">The UHNBLEController that is managing the peripheral</Abstract>
				</Parameter><Parameter>
					<Name>characteristicUUID</Name>
					<Abstract type="html">A NSString representing the UUID of the characteristic</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/bleController:failedWriteToCharacteristic:</Anchor>
            <NodeRef refid="9"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/UHNBLEControllerDelegate/bleController:failedReadOfCharacteristic:</TokenIdentifier>
			<Abstract type="html">Notifies the delegate when a read from characteristic request failed</Abstract>
			<DeclaredIn>UHNBLEController.h</DeclaredIn>
			
			<Declaration>- (void)bleController:(UHNBLEController *)controller failedReadOfCharacteristic:(NSString *)characteristicUUID</Declaration>
			<Parameters>
				<Parameter>
					<Name>controller</Name>
					<Abstract type="html">The UHNBLEController that is managing the peripheral</Abstract>
				</Parameter><Parameter>
					<Name>characteristicUUID</Name>
					<Abstract type="html">A NSString representing the UUID of the characteristic</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/bleController:failedReadOfCharacteristic:</Anchor>
            <NodeRef refid="9"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/UHNBLEControllerDelegate/bleController:failedNotificationUpdateToCharacteristic:</TokenIdentifier>
			<Abstract type="html">Notifies the delegate when a update notification state request failed</Abstract>
			<DeclaredIn>UHNBLEController.h</DeclaredIn>
			
			<Declaration>- (void)bleController:(UHNBLEController *)controller failedNotificationUpdateToCharacteristic:(NSString *)characteristicUUID</Declaration>
			<Parameters>
				<Parameter>
					<Name>controller</Name>
					<Abstract type="html">The UHNBLEController that is managing the peripheral</Abstract>
				</Parameter><Parameter>
					<Name>characteristicUUID</Name>
					<Abstract type="html">A NSString representing the UUID of the characteristic</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/bleController:failedNotificationUpdateToCharacteristic:</Anchor>
            <NodeRef refid="9"/>
		</Token>
		
		<Token>
			<TokenIdentifier>//apple_ref/occ/intfm/UHNBLEControllerDelegate/bleControllerPairingFailed:</TokenIdentifier>
			<Abstract type="html">Notifies the delegate when pairing failed</Abstract>
			<DeclaredIn>UHNBLEController.h</DeclaredIn>
			
			<Declaration>- (void)bleControllerPairingFailed:(UHNBLEController *)controller</Declaration>
			<Parameters>
				<Parameter>
					<Name>controller</Name>
					<Abstract type="html">The UHNBLEController that is managing the peripheral</Abstract>
				</Parameter>
			</Parameters>
			
			<Anchor>//api/name/bleControllerPairingFailed:</Anchor>
            <NodeRef refid="9"/>
		</Token>
		
        
        
	</File>
</Tokens>